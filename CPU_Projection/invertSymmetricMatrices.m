function result = invertSymmetricMatrices(M)
% Inverts a bunch of symmetric matrices.  Assumes M is m x d x d where 
% M(i,j,k) is element (j,k) of matrix i.  Works for d <= 4.

m = size(M,1);
d = size(M,2);

if d == 1
    result = 1./M;
elseif d == 2
    [N11,N12,N22] = invertSymmetric2x2_autogenerated(squeeze(M(:,1,1)),squeeze(M(:,1,2)),squeeze(M(:,2,2)));
    result = zeros(m,2,2);
    result(:,1,1) = N11;
    result(:,1,2) = N12;
    result(:,2,1) = N12;
    result(:,2,2) = N22;
elseif d == 3
    [N11,N12,N13,N22,N23,N33] = invertSymmetric3x3_autogenerated(squeeze(M(:,1,1)),squeeze(M(:,1,2)),squeeze(M(:,1,3)), ...
                                                             squeeze(M(:,2,2)),squeeze(M(:,2,3)),squeeze(M(:,3,3)));
	result = zeros(m,3,3);
    result(:,1,1) = N11;
    result(:,1,2) = N12;
    result(:,1,3) = N13;
    result(:,2,1) = N12;
    result(:,2,2) = N22;
    result(:,2,3) = N23;
    result(:,3,1) = N13;
    result(:,3,2) = N23;
    result(:,3,3) = N33;
elseif d == 4
    [N11,N12,N13,N14,N22,N23,N24,N33,N34,N44] = invertSymmetric4x4_autogenerated(squeeze(M(:,1,1)),squeeze(M(:,1,2)),squeeze(M(:,1,3)),squeeze(M(:,1,4)),...
                                                                                 squeeze(M(:,2,2)),squeeze(M(:,2,3)),squeeze(M(:,2,4)),...
                                                                                 squeeze(M(:,3,3)),squeeze(M(:,3,4)),squeeze(M(:,4,4)));
	result = zeros(m,4,4);
    result(:,1,1) = N11;
    result(:,1,2) = N12;
    result(:,1,3) = N13;
    result(:,1,4) = N14;
    result(:,2,1) = N12;
    result(:,2,2) = N22;
    result(:,2,3) = N23;
    result(:,2,4) = N24;
    result(:,3,1) = N13;
    result(:,3,2) = N23;
    result(:,3,3) = N33;
    result(:,3,4) = N34;
    result(:,4,1) = N14;
    result(:,4,2) = N24;
    result(:,4,3) = N34;
    result(:,4,4) = N44;
else
    error('Bad choice of d.');
end